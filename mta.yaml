_schema-version: "3.3.0"
ID: pneu-orderbook-apikey
version: 1.0.0
description: "A simple CAP project."
parameters:
  enable-parallel-deployments: true

build-parameters:
  before-all:
    - builder: custom
      commands:
        - npm ci
        - npx cds build --production

modules:
  # --- DB-DEPLOYER (PostgreSQL) ---
  - name: ob-apikey-db
    type: nodejs
    path: gen/pg
    parameters:
      buildpack: nodejs_buildpack
      memory: 256M
      disk-quota: 256M
      no-route: true
      # optional: steuert das Verhalten von cds-deploy über ENV
      cds.deploy.config:
        kind: deploy-only
        service: tokenizer-db
    build-parameters:
      builder: npm
    provides:
      - name: db-deploy-done
        properties:
          ready: "true"
    requires:
      - name: tokenizer-db

  # --- SERVICE (läuft nach erfolgreichem DB-Deploy) ---
  - name: ob-apikey-srv
    type: nodejs
    path: gen/srv
    parameters:
      buildpack: nodejs_buildpack
      memory: 256M
      disk-quota: 1024M
      readiness-health-check-type: http
      readiness-health-check-http-endpoint: /health
    build-parameters:
      builder: npm
    provides:
      - name: srv-api
        properties:
          srv-url: ${default-url}
    requires:
      - name: orderbookapi-xsuaa
      - name: tokenizer-db
      - name: db-deploy-done    # erzwingt Startreihenfolge: DB vor SRV

  # --- APPROUTER ---
  - name: ob-apikey-ar
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      memory: 256M
      disk-quota: 1024M
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api
          url: ~{srv-url}
          forwardAuthToken: true
      - name: orderbookapi-xsuaa
      - name: apikey-html5-runtime

  # --- HTML5-CONTENT DEPLOYER ---
  - name: apikey-app-deployer
    type: com.sap.application.content
    path: gen
    requires:
      - name: apikey-html5-repo-host
        parameters:
          content-target: true
    build-parameters:
      requires:
        - name: tokenizer
          artifacts:
            - tokenizer # <-- KORREKTUR: Ohne die Endung '.zip'
          target-path: resources/

  # --- HTML5-APP BUILD ---
  - name: tokenizer
    type: html5
    path: app/tokenizer
    build-parameters:
      overwrite: true
      build-result: dist
      builder: custom
      commands:
        - npm ci
        - npm run build
      supported-platforms: []
      # NEUE SEKTION: Definiert das Artefakt, das an den Deployer übergeben wird
      artifacts:
        - name: tokenizer.zip  # <--- Wichtig: Den fertigen Zieldateinamen definieren
          path: dist

resources:
  # existierende PostgreSQL-Instanz
  - name: tokenizer-db
    type: org.cloudfoundry.existing-service
    parameters:
      service-name: tokenizer-db

  - name: orderbookapi-xsuaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      tenantmode: dedicated
      service-name: orderbookapi-xsuaa

  - name: apikey-html5-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host

  - name: apikey-html5-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime